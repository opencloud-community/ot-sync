name: Sync repositories

on:
  # Manual trigger
  workflow_dispatch:
  
  # Run every 6 hours
  schedule:
    - cron: '0 */6 * * *'

jobs:
  sync-repositories:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up shared functions
        run: |
          # Define sync_repository function
          sync_repository() {
            # Parameters
            SOURCE_REPO_URL="$1"
            TARGET_REPO_URL="$2"
            REPO_NAME="$3"
            
            echo "=== Processing repository: $REPO_NAME ==="
            
            # Extract target owner/repo for API call
            TARGET_REPO_PATH=$(echo "$TARGET_REPO_URL" | sed 's/.*github.com\/\(.*\)\.git/\1/')
            
            # Check if target repository exists
            echo "Checking if target repository exists..."
            if ! curl -s -o /dev/null -w "%{http_code}" -H "Authorization: token ${{ secrets.SYNC_PAT }}" "https://api.github.com/repos/$TARGET_REPO_PATH" | grep -q "200"; then
              echo "ðŸ›‘ Target repository $TARGET_REPO_PATH doesn't exist or not accessible. Please create it first."
              return 1
            fi
            
            echo "âœ… Target repository exists. Proceeding with check..."
            
            # Get latest commit from source repository
            SOURCE_LATEST_COMMIT=$(git ls-remote "$SOURCE_REPO_URL" HEAD | awk '{print $1}')
            echo "ðŸ“„ Latest commit in source repository: $SOURCE_LATEST_COMMIT"
            
            # Get latest commit from target repository
            TARGET_LATEST_COMMIT=$(git ls-remote "https://x-access-token:${{ secrets.SYNC_PAT }}@github.com/$TARGET_REPO_PATH.git" HEAD | awk '{print $1}')
            echo "ðŸ“„ Latest commit in target repository: $TARGET_LATEST_COMMIT"
            
            # Compare commits
            if [ "$SOURCE_LATEST_COMMIT" = "$TARGET_LATEST_COMMIT" ]; then
              echo "âœ… Repositories are already in sync. Skipping synchronization."
              return 0
            fi
            
            echo "ðŸ”„ Repositories are not in sync. Proceeding with synchronization..."
            
            # Create temporary directory
            TMP_DIR="./tmp/$REPO_NAME"
            mkdir -p "$TMP_DIR"
            cd "$TMP_DIR"
            
            # Clone source repository from GitLab
            echo "ðŸ“¥ Cloning source repository..."
            git clone --mirror "$SOURCE_REPO_URL" .
            
            # Configure Git
            git config --global user.name 'GitHub Action'
            git config --global user.email 'action@github.com'
            
            # Configure GitHub remote with PAT
            echo "ðŸ”— Configuring GitHub remote..."
            git remote add github "https://x-access-token:${{ secrets.SYNC_PAT }}@github.com/$TARGET_REPO_PATH.git"
            
            # Push to GitHub target repository
            echo "ðŸ“¤ Pushing to GitHub target repository..."
            git push --mirror github
            
            # Cleanup
            cd ../..
            rm -rf "$TMP_DIR"
            
            echo "âœ… Successfully synchronized $REPO_NAME repository."
            echo "=================================================="
          }
          
          # Export the function
          export -f sync_repository
      
      - name: Sync ot-setup repository
        run: |
          sync_repository \
            "https://gitlab.opencode.de/opentalk/ot-setup.git" \
            "github.com:opencloud-community/ot-setup.git" \
            "ot-setup"
      
      - name: Sync ot-docs repository
        run: |
          sync_repository \
            "https://gitlab.opencode.de/opentalk/docs.git" \
            "github.com:opencloud-community/ot-docs.git" \
            "ot-docs"
          
      - name: Sync ot-controller repository
        run: |
          sync_repository \
            "https://gitlab.opencode.de/opentalk/controller.git" \
            "github.com:opencloud-community/ot-controller.git" \
            "ot-controller"